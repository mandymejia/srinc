setwd('~/Box Sync/Research/HCP_Data/Yeo overlap')
read.csv('ICA300.csv')
tab <- read.csv('ICA300.csv')
dim(tab)
head(tab)
apply(tab, 1, which.max)
tab$matnet <- apply(tab, 1, which.max)
head(tab)
netnames <- names(tab)
netnames
tab <- read.csv('ICA300.csv')
names(tab)
netnames <- names(tab)
netnames <- gsub('.',' ',netnames,fixed=TRUE)
netnames
tab$matnet <- apply(tab, 1, which.max)
head(tab)
tab$matnet <- factor(tab$matnet, levels=1:7, labels=netnames)
head(tab)
tab$overlap <- apply(tab[,1:7], 1, max)
head(tab)
tab$pctoverlap <- tab$overlap/apply(tab[,1:7, 1, sum])
tab$pctoverlap <- tab$overlap/apply(tab[,1:7], 1, sum)
head(tab)
hist(tab$pctoverlap)
write.csv(df(seed=1:300, pctoverlap=tab$pctoverlap), '~/Box Sync/Research/MY PROJECTS/ScanLengthHCP/reliability_app/overlap.csv'
)
table(data.frame(seed=1:300, pctoverlap=tab$pctoverlap), '~/Box Sync/Research/MY PROJECTS/ScanLengthHCP/reliability_app/overlap.csv', sep=',', row.names=FALSE, col.names=FALSE)
data.frame(seed=1:300, pctoverlap=tab$pctoverlap)
write.table(data.frame(seed=1:300, pctoverlap=tab$pctoverlap), '~/Box Sync/Research/MY PROJECTS/ScanLengthHCP/reliability_app/overlap.csv', sep=',', row.names=FALSE, col.names=FALSE)
tmp$pctoverlap[is.na(tmp$pctoverlap)]
tmp <- data.frame(seed=1:300, pctoverlap=tab$pctoverlap)
tmp$pctoverlap[is.na(tmp$pctoverlap)]
tmp$pctoverlap[is.na(tmp$pctoverlap)] <- 0
tab[is.na(tmp$pctoverlap),]
head(tab)
is.na(tmp$pctoverlap)
sum(is.na(tmp$pctoverlap))
tmp <- data.frame(seed=1:300, pctoverlap=tab$pctoverlap)
tmp
tab
tab[270,]
is.nan(tmp$pctoverlap)
tmp <- data.frame(seed=1:300, pctoverlap=tab$pctoverlap)
tmp$pctoverlap[is.nan(tmp$pctoverlap)] <- 0
write.table(, '~/Box Sync/Research/MY PROJECTS/ScanLengthHCP/reliability_app/overlap.csv', sep=',', row.names=FALSE, col.names=FALSE)
fname <- '~/Box Sync/Research/MY PROJECTS/ScanLengthHCP/reliability_app/overlap.csv'
write.table(tmp, fname, sep=',', row.names=FALSE, col.names=FALSE)
tab <- read.csv('ICA300.csv')
netnames <- names(tab)
netnames <- gsub('.',' ',netnames,fixed=TRUE)
tab$matnet <- apply(tab, 1, which.max)
tab$matnet_name <- factor(tab$matnet, levels=1:7, labels=netnames)
tab$overlap <- apply(tab[,1:7], 1, max)
tab$pctoverlap <- tab$overlap/apply(tab[,1:7], 1, sum)
head(tab)
i=1
overlap_i <- tab$pctoverlap
overlap_i
overlap_i[tab$matnet != i] <- 0
head(overlap_i)
head(tab)
unique(tab$matnet)
tab <- read.csv('ICA300.csv')
netnames <- names(tab)
netnames <- gsub('.',' ',netnames,fixed=TRUE)
#figure out maximally overlapping network
tab$net <- apply(tab, 1, which.max) #assign network as the one with maximal overlap
tab$net_name <- factor(tab$net, levels=1:7, labels=netnames)
tab$overlap <- apply(tab[,1:7], 1, max) #overlap with assigned network
tab$pctoverlap <- tab$overlap/apply(tab[,1:7], 1, sum)
i
overlap_i <- tab$pctoverlap
overlap_i[tab$net != i] <- 0
pctoverlap_i <- tab$pctoverlap
pctoverlap_i[tab$net != i] <- 0
tmp <- data.frame(seed=1:300, pctoverlap=pctoverlap_i)
pctoverlap_i
tmp <- data.frame(seed=1:300, pctoverlap=pctoverlap_i)
tmp$pctoverlap[is.nan(tmp$pctoverlap)] <- 0
tmp
for(i in 1:7){
pctoverlap_i <- tab$pctoverlap
pctoverlap_i[tab$net != i] <- 0
tmp <- data.frame(seed=1:300, pctoverlap=pctoverlap_i)
tmp$pctoverlap[is.nan(tmp$pctoverlap)] <- 0
fname <- paste0('~/Box Sync/Research/MY PROJECTS/ScanLengthHCP/reliability_app/overlap_net',i,'.csv')
write.table(tmp, fname, sep=',', row.names=FALSE, col.names=FALSE)
}
netnames
dim(tab)
JSON <- paste0(1:300, ': {\n"network": ',tab$net, '\n"friendlyname": ""\n},')
JSON[1]
print(JSON[1])
writeLines(JSON[1])
JSON <- paste0(1:300, ': {\n\t"network": ',tab$net, '\n\t"friendlyname": ""\n\t},')
writeLines(JSON[1])
writeLines(paste(JSON, collapse='\n'))
netnames
install.packages('jsonlite')
library(jsonlite)
jsoncars <- toJSON(mtcars, pretty=TRUE)
cat(jsoncars)
head(mtcars)
JSON
setwd('~/Box Sync/Software/srinc/')
fileConn <- file('seed_networks.json')
JSON
substr(JSON, 1, nchar(JSON)-1)
JSON <- substr(JSON, 1, nchar(JSON)-1) #remove last comma
writeLines(JSON, fileConn)
close(fileConn)
JSON <- paste0(1:300, ': {\n\t"network": ',tab$net, ',\n\t"friendlyname": ""\n\t},')
JSON <- paste(JSON, collapse='\n')
JSON <- substr(JSON, 1, nchar(JSON)-1) #remove last comma
JSON
writeLines(JSON)
fileConn <- file('seed_networks.json')
writeLines(JSON, fileConn)
close(fileConn)
